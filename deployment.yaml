# not being used

apiVersion: apps/v1
kind: Deployment
metadata:
  name: udacity-capstone
spec:
  volumes:
  - name: postgres-data
    hostPath:
      path: "/kubernetes-volumes/postgres-data"
  - name: backend
    hostPath:
      path: "/kubernetes-volumes/backend"
  - name: frontend
    hostPath:
      path: "/kubernetes-volumes/frontend"
  - name: celery
    hostPath:
      path: "/kubernetes-volumes/celery"
  - name: celery-beat
    hostPath:
      path: "/kubernetes-volumes/celery-beat"
  - name: node-modules
    hostPath:
      path: "/kubernetes-volumes/node-modules"

  restartPolicy: Always
  containers:
  - name: backend
    image: mraarif/capstone-backend
    volumeMounts:
    - name: backend
      mountPath: /backend
    ports:
    - containerPort: 8000
    envFrom:
      - secretRef:
          name: dev-secret
    command: [ "/bin/sh" ]
    args: [ "-c", "cd ~ && ls -a && pwd && ls && cd headliner/ && python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000" ]

  - name: db
    image: postgres:12.0-alpine
    volumeMounts:
    - name: postgres-data
      mountPath: /var/lib/postgresql/data/
    env:
      - name: POSTGRES_USER
        value: "hello_django"
      - name: POSTGRES_PASSWORD
        value: "hello_django"
      - name: POSTGRES_DB
        value: "hello_django_dev"

  - name: redis
    image: redis:alpine

  - name: celery
    image: mraarif/capstone-celery
    volumeMounts:
      - name: celery
        mountPath: /usr/src/worker
    envFrom:
      - secretRef:
          name: dev-secret
    command: [ "/bin/sh" ]
    args: [ "-c", "pwd && ls && cd headliner/ && celery -A headliner worker -l info" ]

  - name: celery-beat
    image: mraarif/capstone-celery-beat
    volumeMounts:
      - name: celery-beat
        mountPath: /usr/src/beat
    envFrom:
      - secretRef:
          name: dev-secret
    command: [ "/bin/sh" ]
    args: [ "-c", "cd headliner/ && celery -A headliner beat -l info" ]

  - name: frontend
    image: mraarif/capstone-frontend
    volumeMounts:
      - name: frontend
        mountPath: /frontend
      - name: node-modules
        mountPath: /frontend/node_modules
    ports:
    - containerPort: 3000
    envFrom:
      - secretRef:
          name: dev-secret
    command: [ "/bin/sh" ]
    args: [ "-c", "pwd && ls && npm start" ]
